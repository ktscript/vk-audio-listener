import { backButtons, BotContext } from "@bot/extensions";
import { Logger } from "@utils/logger";
import { MenuTemplate } from "telegraf-inline-menu/dist/source";

const anticaptchaMenu = new MenuTemplate<BotContext>(
    async context => {
        try {
            const key = context.parent.request("anticaptcha-get");
            const balance = await context.parent.request("anticaptcha-balance");

            const bodyText =
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ê–Ω—Ç–∏-–ö–∞–ø—á–∏.\n\n" +
                `üîë –¢–µ–∫—É—â–∏–π –∫–ª—é—á: ${key || "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"}\n` +
                `üíµ –ë–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞ anti-captcha.com: ${balance + "$" || "–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"}`;

            return {
                text: bodyText,
                parse_mode: "Markdown"
            }
        } catch {
            return "–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–Ω—Ç–∏-–∫–∞–ø—á–∏, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞."
        }
    }
);

anticaptchaMenu.interact("üîë –ò–∑–º–µ–Ω–∏—Ç—å –∫–ª—é—á", "edit-anticaptcha-key", {
    async do(context) {
        context.scene.enter("edit-anticaptcha");
        return true;
    }
})

anticaptchaMenu.manualRow(backButtons);

export default anticaptchaMenu;